openapi: 3.0.0
info:
  title: Phogoprint API
  version: 0.1.0

servers:
  - url: http://localhost:8080

paths:
  /template:
    get:
      summary: List templates
      operationId: ListTemplate
      responses:
        "200":
          description: All templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Template"
  /font:
    get:
      summary: List fonts
      operationId: ListFont
      responses:
        "200":
          description: All available fonts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Font"
  /template/{uuid}:
    get:
      summary: Get a single template
      operationId: GetTemplate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Uuid"
      responses:
        "200":
          description: The template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
        "400":
          description: Invalid UUID
        "404":
          description: Template not found
    put:
      summary: Create a new template, or update an existing one
      operationId: CreateOrUpdateTemplate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Template"
      responses:
        "200":
          description: Template updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Uuid"
        "201":
          description: Template created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Uuid"
        "400":
          description: Invalid UUID
        "404":
          description: No template found
  /template/{uuid}/print:
    post:
      summary: Print a template
      operationId: PrintTemplate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrintTemplateRequest"
      responses:
        "202":
          description: Printer successfully printed
        "400":
          description: Invalid UUID
        "404":
          description: No such template
        "422":
          description: Invalid parameters
          content:
            application/json:
              schema:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    example: Missing parameter "address"
        "503":
          description: Printer unavailable
  /printer:
    post:
      summary: Print an image directly
      operationId: PrintImage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - contentType
                - data
              properties:
                contentType:
                  type: string
                  example: "image/png"
                data:
                  type: string
                  format: binary
      responses:
        "202":
          description: Printer successfully printed
        "422":
          description: Unprintable image
        "503":
          description: Printer unavailable
  /printer/info:
    get:
      summary: Get device info
      operationId: GetPrinterInfo
      responses:
        "200":
          description: The device info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceInfo"
        "503":
          description: Printer unavailable
components:
  schemas:
    DeviceInfo:
      type: object
      required:
        - batteryLevel
        - firmwareVersion
        - state
      properties:
        batteryLevel:
          type: integer
          description: Battery level of device as a percentage
          example: 100
        firmwareVersion:
          type: string
          description: Device specific firmware version string
          example: "3.0.7"
        state:
          $ref: "#/components/schemas/DeviceState"
    DeviceState:
      type: string
      enum: [DISCONNECTED, CONNECTING, READY, BUSY, OUT_OF_PAPER]
    Template:
      type: object
      required:
        - uuid
        - name
        - landscape
        - minSize
        - maxSize
      properties:
        uuid:
          $ref: "#/components/schemas/Uuid"
        name:
          type: string
          example: Postage Label
        landscape:
          type: boolean
          example: true
        minSize:
          type: integer
          example: 100
        maxSize:
          type: integer
          example: 200
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/TemplateParameter"
        texts:
          type: array
          items:
            $ref: "#/components/schemas/TemplateText"
        images:
          type: array
          items:
            $ref: "#/components/schemas/TemplateImage"
    TemplateImage:
      type: object
      required:
        - image
        - position
        - width
        - height
      properties:
        image:
          type: string
          example: "irjgt34toofw4ig0j0"
          description: base64 image data
        position:
          $ref: "#/components/schemas/Position"
        width:
          type: integer
          example: 100
        height:
          type: integer
          example: 100
    TemplateText:
      type: object
      required:
        - text
        - position
        - fontUuid
        - fontSize
      properties:
        text:
          type: string
          example: "Post to: {{address}}"
        position:
          $ref: "#/components/schemas/Position"
        width:
          type: integer
          description: The max allowed width of the text. This is required if the template is portrait (landscape = `false`)
          example: 100
        height:
          type: integer
          description: The max allowed height of the text. This is required if the template is landscape (landscape = `true`)
          example: 100
        fontUuid:
          $ref: "#/components/schemas/Uuid"
        fontSize:
          type: integer
          example: 20
    Position:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: integer
          example: 10
        y:
          type: integer
          example: 10
    TemplateParameter:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: address
        maxLength:
          type: integer
          example: 100
    PrintTemplateRequest:
      type: object
      required:
        - parameterValues
      properties:
        parameterValues:
          type: array
          items:
            $ref: "#/components/schemas/ParameterValue"
    ParameterValue:
      type: object
      required:
        - parameterName
        - value
      properties:
        parameterName:
          type: string
          example: address
        value:
          type: string
          example: 123 Fake Street
    Uuid:
      type: string
      pattern: '^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$'
      example: 4d98c9b6-8bb5-492d-9789-a2bb5ea8ab21
    Font:
      type: object
      required:
        - uuid
        - name
      properties:
        uuid:
          $ref: "#/components/schemas/Uuid"
        name:
          type: string
          example: Go Regular
