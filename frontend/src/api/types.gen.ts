// This file is auto-generated by @hey-api/openapi-ts

export type DeviceInfo = {
    /**
     * Battery level of device as a percentage
     */
    batteryLevel: number;
    /**
     * Device specific firmware version string
     */
    firmwareVersion: string;
    state: DeviceState;
};

export type DeviceState = 'DISCONNECTED' | 'CONNECTING' | 'READY' | 'BUSY' | 'OUT_OF_PAPER';

export type Template = {
    uuid: Uuid;
    name: string;
    landscape: boolean;
    minSize: number;
    maxSize: number;
    parameters?: Array<TemplateParameter>;
    texts?: Array<TemplateText>;
    images?: Array<TemplateImage>;
};

export type TemplateImage = {
    /**
     * base64 image data
     */
    image: string;
    position: Position;
    width: number;
    height: number;
};

export type TemplateText = {
    text: string;
    position: Position;
    /**
     * The max allowed width of the text. This is required if the template is portrait (landscape = `false`)
     */
    width?: number;
    /**
     * The max allowed height of the text. This is required if the template is landscape (landscape = `true`)
     */
    height?: number;
    fontUuid: Uuid;
    fontSize: number;
};

export type Position = {
    x: number;
    y: number;
};

export type TemplateParameter = {
    name: string;
    maxLength?: number;
};

export type PrintTemplateRequest = {
    parameterValues: Array<ParameterValue>;
};

export type ParameterValue = {
    parameterName: string;
    value: string;
};

export type Uuid = string;

export type Font = {
    uuid: Uuid;
    name: string;
};

export type ListTemplateData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/template';
};

export type ListTemplateResponses = {
    /**
     * All templates
     */
    200: Array<Template>;
};

export type ListTemplateResponse = ListTemplateResponses[keyof ListTemplateResponses];

export type ListFontData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/font';
};

export type ListFontResponses = {
    /**
     * All available fonts
     */
    200: Array<Font>;
};

export type ListFontResponse = ListFontResponses[keyof ListFontResponses];

export type GetTemplateData = {
    body?: never;
    path: {
        uuid: Uuid;
    };
    query?: never;
    url: '/template/{uuid}';
};

export type GetTemplateErrors = {
    /**
     * Invalid UUID
     */
    400: unknown;
    /**
     * Template not found
     */
    404: unknown;
};

export type GetTemplateResponses = {
    /**
     * The template
     */
    200: Template;
};

export type GetTemplateResponse = GetTemplateResponses[keyof GetTemplateResponses];

export type CreateOrUpdateTemplateData = {
    body: Template;
    path: {
        uuid: Uuid;
    };
    query?: never;
    url: '/template/{uuid}';
};

export type CreateOrUpdateTemplateErrors = {
    /**
     * Bad request
     */
    400: string;
    /**
     * No template found
     */
    404: unknown;
};

export type CreateOrUpdateTemplateError = CreateOrUpdateTemplateErrors[keyof CreateOrUpdateTemplateErrors];

export type CreateOrUpdateTemplateResponses = {
    /**
     * Template updated successfully
     */
    200: Uuid;
    /**
     * Template created successfully
     */
    201: Uuid;
};

export type CreateOrUpdateTemplateResponse = CreateOrUpdateTemplateResponses[keyof CreateOrUpdateTemplateResponses];

export type PrintTemplateData = {
    body: PrintTemplateRequest;
    path: {
        uuid: Uuid;
    };
    query?: never;
    url: '/template/{uuid}/print';
};

export type PrintTemplateErrors = {
    /**
     * Invalid UUID
     */
    400: unknown;
    /**
     * No such template
     */
    404: unknown;
    /**
     * Invalid parameters
     */
    422: {
        reason: string;
    };
    /**
     * Printer unavailable
     */
    503: unknown;
};

export type PrintTemplateError = PrintTemplateErrors[keyof PrintTemplateErrors];

export type PrintTemplateResponses = {
    /**
     * Printer successfully printed
     */
    202: unknown;
};

export type PrintImageData = {
    body: {
        contentType: string;
        data: Blob | File;
    };
    path?: never;
    query?: never;
    url: '/printer';
};

export type PrintImageErrors = {
    /**
     * Unprintable image
     */
    422: unknown;
    /**
     * Printer unavailable
     */
    503: unknown;
};

export type PrintImageResponses = {
    /**
     * Printer successfully printed
     */
    202: unknown;
};

export type GetPrinterInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/printer/info';
};

export type GetPrinterInfoErrors = {
    /**
     * Printer unavailable
     */
    503: unknown;
};

export type GetPrinterInfoResponses = {
    /**
     * The device info
     */
    200: DeviceInfo;
};

export type GetPrinterInfoResponse = GetPrinterInfoResponses[keyof GetPrinterInfoResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};